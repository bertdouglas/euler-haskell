---------------------------------------------------------
-- Even Fibonacci numbers
-- Problem 2
-- Each new term in the Fibonacci sequence is generated by adding the previous 
-- two terms. By starting with 1 and 2, the first 10 terms will be:
-- 
-- 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
-- 
-- By considering the terms in the Fibonacci sequence whose values do not 
-- exceed four million, find the sum of the even-valued terms.
----------------------------------------------------------

-- To build:  ghc --make foo.hs
-- To run:    ./foo
-- Output:    4613732

limit = 4000000

solve a b s =
  let
    a1 = a + b
    b1 = a
    s1 = if even a1 
      then s+a1 
      else s  
  in
    if a1 > limit
      then s
      else solve a1 b1 s1

answer = solve 1 0 0

main = print answer

{-
This is very fast, but somewhat obscure.  The fibonacci sequence gets buried
and turned into a recurrence relation.  I tried a list oriented approach,
but it was very slow.  

This doesn't seem very "functional" in style.  
I have a feeling that something better is possible.
Suggestions are welcomed.
-}

